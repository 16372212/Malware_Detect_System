package handler

import (
	"MalwareDetect/model"
	"MalwareDetect/service"
	"MalwareDetect/util/response"
	"github.com/gin-gonic/gin"
)

var categoryController = service.NewCategoryService()

func CategoryCreate(ctx *gin.Context) {
	rsp, err := categoryController.Create(ctx)
	if err != nil {
		response.Fail(ctx, err.Error(), nil)
	}
	category, ok := rsp.(model.Category)
	if !ok {
		response.Fail(ctx, "internal error", nil)
	}
	response.Success(ctx, "创建成功", gin.H{"category": category})
}

func CategoryUpdate(ctx *gin.Context) {
	rsp, err := categoryController.Update(ctx)
	if err != nil {
		response.Fail(ctx, err.Error(), nil)
	}
	category, ok := rsp.(model.Category)
	if !ok {
		response.Fail(ctx, "internal error", nil)
	}
	response.Success(ctx, "更新成功", gin.H{"category": category})
}

func CategoryShow(ctx *gin.Context) {
	rsp, err := categoryController.Show(ctx)
	if err != nil {
		response.Fail(ctx, err.Error(), nil)
	}
	category, ok := rsp.(model.Category)
	if !ok {
		response.Fail(ctx, "internal error", nil)
	}
	response.Success(ctx, "成功", gin.H{"category": category})
}

func CategoryDelete(ctx *gin.Context) {
	rsp, err := categoryController.Delete(ctx)
	if err != nil {
		response.Fail(ctx, err.Error(), nil)
	}
	category, ok := rsp.(model.Category)
	if !ok {
		response.Fail(ctx, "internal error", nil)
	}
	response.Success(ctx, "删除成功", gin.H{"category": category})
}

func CategoryList(ctx *gin.Context) {
	rsp, err := categoryController.PageList(ctx)
	if err != nil {
		response.Fail(ctx, err.Error(), nil)
	}
	ginRsp, ok := rsp.(gin.H)
	if !ok {
		response.Fail(ctx, "internal error", nil)
	}
	response.Success(ctx, "删除成功", ginRsp)
}
